---
- name: Setup Web Servers
  hosts: db_servers    
  vars_files:
  - ./group_vars/all.yml
  tasks: 
    - name: Update Repository cache
      apt:
        update_cache: true
        cache_valid_time: 3600
        force_apt_get: true
      become: yes    
      become_method: sudo  
    - name: Install MySQL Dependencies
      apt: name={{ item }} state=present
      with_items:       
        - python3
        - python3-pip
        - mysql-server
        - mysql-client
      become: yes    
      become_method: sudo  
    - name: Install Python dependencies
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - pymysql
      become: yes    
      become_method: sudo  

    - name: Start MySQL Service
      service:
        name: mysql
        state: started
        enabled: yes       # set it to run at ec2 instance startup
      become: yes    
      become_method: sudo  

    - debug:
        var: ansible_facts['mysql_admin_pass']
    
    - name: Change the authentication plugin of MySQL root user to mysql_native_password
      shell: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'
      become: yes    
      become_method: sudo 
      when: ansible_facts['mysql_admin_pass'] is not defined

    - name: Flush Privileges
      shell: mysql -u root -e 'FLUSH PRIVILEGES'
      become: yes    
      become_method: sudo 
      when: ansible_facts['mysql_admin_pass'] is not defined
      
    - name: Set MySQL root password
      mysql_user:
        login_host: 'localhost'
        login_user: 'root'
        login_password: ''
        name: 'root'
        password: thales
        state: present
      when: ansible_facts['mysql_admin_pass'] is not defined

    - name: Save root password 
      set_fact:
        mysql_admin_pass: thales
        cacheable: true          # saved in ansible_facts; check these too: fact_caching = jsonfile fact_caching_connection=/tmp

    - name: Create Application Database
      mysql_db: 
        login_user: root
        login_password: thales
        name: "{{ db_name }}"
        state: present

    - name: Create another Database user
      mysql_user:
        login_user: root
        login_password: thales
        name: "{{ db_user }}"
        password: "{{ db_user_password }}"
        priv: "*.*:ALL"
        state: present
        host: '%'

    - name: Update MySQL Configuration file to accept connections from remote locations
      ini_file:
        path: /etc/mysql/my.cnf
        #path: /etc/mysql/mysql.conf.d/mysqld.cnf
        section: mysqld
        option: bind-address
        value: 0.0.0.0
      become: yes    
      become_method: sudo 

    - name: Re-start MySQL Service
      service:
        name: mysql
        state: restarted
        enabled: yes
      become: yes    
      become_method: sudo 
    
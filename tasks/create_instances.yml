    - name: Launch Instances
      amazon.aws.ec2_instance:
        name: "{{ item.group }}"
        tags:
          app_owner: john 
        key_name: aws_instance_key_pair           # SSH Key Pair
        instance_type: t2.micro
        image_id: ami-0c6ebbd55ab05f070           # ubuntu server 20.04 image 64-bit Arm
        region: eu-west-3
        security_group: Ansible                   # security group [made in AWS Console before]
        count: '{{ item.count }}'
        vpc_subnet_id: subnet-07bec51cb606cb178
        network:
          assign_public_ip: yes
        aws_access_key: "{{ item.aws_access_key }}"    # [made in AWS Console -> IAM User before]
        aws_secret_key: "{{ item.aws_secret_key }}"                        
        state: started
        wait: yes 
      register: ec2

    - debug:
        var: ec2

    - name: Add instances to the inventory
      lineinfile:
        path: /home/croco/udemy-ansible-assignment/inventory.txt
        insertafter: '^\[{{ item.group }}\]'
        line: |-
          {{ instance.network_interfaces[0].association.public_ip }} ansible_connection=ssh ansible_user=ubuntu ansible_ssh_private_key_file=/home/croco/.ssh/aws_instance_key_pair
      loop: "{{ ec2.instances }}"
      loop_control:          
        loop_var: instance

    - name: Save private IP of db server
      set_fact:
        db_private_ip: "{{ ec2.instances[0].network_interfaces[0].private_ip_address }}"
        cacheable: true                        # save in ansible_facts
      when: item.group == "db_servers"  

    - name: Test
      debug:
        msg: "{{ ansible_facts['db_private_ip'] }}"
      when: ansible_facts['db_private_ip'] is defined